---
title: "Solucion Prueba"
format: html
editor: visual
---

Carga de las librerias módulos modulos:

#### R:

```{r}
library(readxl)
library(tidyverse)
library(psych)
```

#### python:

```{python}
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import sys
```

## Versiones de R y python

#### R:

```{r}
R.version
```

#### python:

```{python}
print(sys.version)
```

## Ejercicios sobre manipulacion de datos

### Ejercicio 1: Comprension y Manipulacion de Bases de Datos


Lectura de la base:
```{r}
tabla <- read_csv2(file = "../data/INEC_Encuesta Estructural Empresarial_Tomo I_2021.csv")
```

```{python}

tabla = pd.read_csv('../data/INEC_Encuesta Estructural Empresarial_Tomo I_2021.csv', delimiter = ';')

```

Seleccionar las variables y mostrar las 10 primeras filas:

> Ejercicio de relación del `.` y la `pipe`

```{r}
iris %>% 
  group_by(Species) %>% 
  summarise(media = mean(Petal.Length))

write.csv(iris,"iris.csv")
```

```{python}

pd.read_csv("iris.csv").groupby("Species").agg(medias = ("Petal.Length","mean"))

```

---

Variables que contienen información sobre el identificador del establecimiento, su actividad económica y la provincia donde se encuentra ubicado:

```{r}
tabla %>% 
  select(id_empresa,des_letra,provincia) %>% 
  head(n = 10)
```


### **Ejercicio 2: Generacion de estadisticas de resumen**


Con la base ya importada anteriormente procedemos a obtener la estadistica descriptiva de la variable de trabajadores afiliados en la empresa:

```{python}
tabla.rename(columns={'v5090':'tafiliados'}, inplace=True)

print (tabla['tafiliados'].describe())
```

Ahora se procede a obtener el numero de empresas por provincia:

```{python}
provincias = pd.read_excel("../data/CODIFICACIÓN_2021.xlsx",sheet_name = "PROVINCIAS",usecols = "B:C",skiprows = 1)

provincias = provincias.rename(columns = {"DPA_PROVIN":"provincia"})


tabla = tabla.merge(provincias, how = "left", on = "provincia")

conteo_provincia = tabla.groupby('DPA_DESPRO')['id_empresa'].count()

print(conteo_provincia)
```

### Ejercicio 3: Comparacion de grupos dentro de los datos

Número de empresas en pichincha que pertenecen a una actividad económica específica:

```{r}

tabla_pichincha <- tabla %>% 
  filter(provincia == 17)

tabla_pichincha %>% 
  count(des_letra)

```

Número de trabajadores promedio en las empresas:
```{r}

numero_trabajadores <- tabla_pichincha %>% 
  group_by(des_letra)%>%
  summarise(prom_tra = mean(v5090, na.rm = FALSE))

numero_trabajadores
```

### **Ejercicio 4: Analisis de Patrones**

Ahora creamos una tabla de frecuencias por provincias de empresas que tienen mas de 50 empleados:

```{python}

tabla_50trab = tabla[tabla['tafiliados'] > 50 ]

tab_freq_emp = tabla_50trab.groupby('DPA_DESPRO')['id_empresa'].count()

acumulado = tab_freq_emp.cumsum()

freq_tabla = pd.concat([tab_freq_emp, acumulado], axis=1)

freq_tabla.columns = ['Frequencia', 'Frecuencia Acumulada']

print(freq_tabla)


```

Calculando entonces tambien el porcentaje de empresas con mas de 50 empleados por provincia:

```{python}

total = tabla.groupby('DPA_DESPRO')['id_empresa'].nunique()

porcentaje = tab_freq_emp / total 

resumen = pd.concat([tab_freq_emp, acumulado, porcentaje], axis=1)

resumen.columns = ['Frecuencia', 'Frecuencia Acumulada', 'Porcentaje']

print(resumen.sort_values("Porcentaje",ascending = False))
```

###Ejercicio 5: Manipulación avanzada de una base de datos

Creación de una variable que indica si el establecimiento tiene más de 10 años de antigüedad:

```{r}

tabla <- tabla %>%
  mutate(
    antiguedad = if_else(anio_ruc_dis < 2009,
                       true = 1,
                       false = 0)
  )

```

Base de datos que contiene a los establecimientos que tienen más de 10 años de antigüedad y que tienen más de 20 trabajadores:
```{r}
base_resultado <- tabla %>% 
  filter(antiguedad > 0 & v5090 > 20)

glimpse(base_resultado)
```

## Ejercicios sobre visualizacion de datos

### Ejercicio 1: Diagrama de barras por provincia
Es necesaria una parte del código del ejercicio 4
```{r}

provincias <- read_excel("../data/CODIFICACIÓN_2021.xlsx",sheet = "PROVINCIAS",range = "B2:C26")

resumen_provincias <- tabla %>% 
  filter(v5090 >= 50) %>% 
  count(provincia)

resumen_provincias <- resumen_provincias %>% 
  left_join(provincias,by = c("provincia" = "DPA_PROVIN"))

```

Diagrama de barras que muestra el número de empresas por provincia:
```{r}

resumen_provincias %>% 
  mutate(DPA_DESPRO = factor(DPA_DESPRO),
         DPA_DESPRO = fct_reorder(.f = DPA_DESPRO,
                                  .x = n)) %>%  
  ggplot() + 
  geom_bar(aes(x = DPA_DESPRO, 
               y = n),
           stat="identity") + 
  labs(x = "Provincia",
       y = 'Número de empresas',
       title = "Empresas encuestas en la ESESEM de acuerdo a la provincia",
       caption = "Fuente: ENESEM (INEC)") +
  theme_minimal() +
  coord_flip()

```

### Ejercicio 2: Diagrama de dispersion del numero de empresas y su valor agregado bruto

Se calcula el valor agregado por provincia y se lo agrega a un dataset donde tambien se tenga el conteo de empresas existentes en estos territorios:

```{python}
df_agrupado = tabla.groupby('DPA_DESPRO').agg({'valag':'sum', 'id_empresa':'count'})

df_agrupado[["log_valag","log_id_empresa"]] = df_agrupado[["valag","id_empresa"]].apply(lambda x: np.log(x))

plt.figure(figsize=(10,6))
scatter = plt.scatter(df_agrupado['log_valag'], df_agrupado['log_id_empresa'], c=range(len(df_agrupado)), cmap='viridis')
plt.xlabel('Valor Agregado Bruto')
plt.ylabel('Numero de Empresas')
plt.title('Relacion Valor Agregado Bruto y Numero de Empresas')
plt.grid(True)
plt.savefig('NumEmpresas_ValorAgregado.png', bbox_inches='tight', dpi= 600)
plt.show()

```
